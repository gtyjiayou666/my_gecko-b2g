/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsIImsRegService.idl"
#include "nsIImsConfig.idl"
#include "nsIImsMMTelFeature.idl"
#include "nsIImsRegistration.idl"

%{C++
#define GONK_IMS_REG_SERVICE_CID \
  { 0x73def38d, 0x650a, 0x43af, \
    { 0x91, 0xc7, 0x40, 0xd4, 0xcc, 0x97, 0x2c, 0x34 } }
#define GONK_IMSREGSERVICE_CONTRACTID \
        "@mozilla.org/mobileconnection/gonkimsregservice;1"
%}

[scriptable, uuid(a8711577-4ba0-4bbc-b890-6e854a4de7ff)]
interface nsIGonkImsRegService : nsIImsRegService
{
  /**
   * Invoked when the enabled state is changed.
   */
  void notifyEnabledStateChanged(in unsigned long aClientId, in boolean aEnabled);

  /**
   * Invoked when the preferred profile is changed.
   */
  void notifyPreferredProfileChanged(in unsigned long aClientId, in unsigned short aProfile);

  /**
   * Invoked when IMS capability or registration state changed.
   *
   * @param aCapability
   *        One of nsIImsRegHandler::IMS_CAPABILITY_* values
   * @param aUnregisteredReason
   *        The reason why IMS is not registered.
   */
  void notifyCapabilityChanged(in unsigned long aClientId,
                               in short aCapability,
                               in AString aUnregisteredReason);

  /**
   * Invoked when the RTT enabled state is changed.
   */
  void notifyRttEnabledStateChanged(in unsigned long aClientId,
                                    in boolean aEnabled);
};

[scriptable, uuid(7678db90-6d8f-418a-8904-0376cfde8f14)]
interface nsIGonkImsRegHandler : nsIImsRegHandler
{
  /**
   * Current reg state of Ims.
   */
  readonly attribute boolean isImsRegistered;

  // nsIImsConfig
  readonly attribute nsIImsConfig imsConfig;

  // nsIImsMMTelFeature
  readonly attribute nsIImsMMTelFeature imsMMTelFeature;

  // nsIImsRegistration
  readonly attribute nsIImsRegistration imsRegistration;
};
