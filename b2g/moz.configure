# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

option("--with-b2g-version", nargs=1, help="B2G version number", default="4.0")


@depends("--with-b2g-version")
def b2g_version(value):
    return value[0]


set_config("MOZ_B2G_VERSION", b2g_version)
set_define("MOZ_B2G_VERSION", b2g_version)


option("--with-b2g-os-name", nargs=1, help="B2G OS name", default="B2GOS")


@depends("--with-b2g-os-name")
def b2g_os_name(value):
    return value[0]


set_config("MOZ_B2G_OS_NAME", b2g_os_name)
set_define("MOZ_B2G_OS_NAME", b2g_os_name)

option("--with-gonk-gfx", nargs=0, help="Use the gonk widget layer")


@depends_if("--with-gonk-gfx")
def gonk_toolkit(_):
    return "cairo-gonk"


imply_option("--enable-default-toolkit", gonk_toolkit)


option(
    "--with-gonk-toolchain-prefix", nargs=1, help="Prefix to gonk toolchain commands"
)


@depends_if("--with-gonk-toolchain-prefix")
def gonk_toolchain_prefix(value):
    return value


imply_option("--with-toolchain-prefix", gonk_toolchain_prefix)

option(
    "--disable-remote-control-service",
    help="Set compile flags necessary for Remote Control Service on B2G",
)


@depends_if("--disable-remote-control-service")
def remote_control_service(value):
    return bool(value)


set_config("MOZ_B2G_REMOTECONTROLSERVICE", remote_control_service)
set_define("MOZ_B2G_REMOTECONTROLSERVICE", remote_control_service)

option("--target-build-variant", nargs=1, help="Target build variant type")


@depends_if("--target-build-variant")
def get_variant(value):
    if value[0] == "user":
        return "TARGET_VARIANT_USER"
    elif value[0] == "userdebug":
        return "TARGET_VARIANT_USERDEBUG"
    else:
        return "TARGET_VARIANT_ENG"


set_config(get_variant, True)
set_define(get_variant, True)

# Presentation Support
# ==============================================================
option("--enable-presentation", help="Enable Presentation Service (default disable)")


@depends("--disable-presentation", target)
def presentation(value, target):
    enabled = bool(value)
    if enabled:
        return True


set_config("MOZ_PRESENTATION", presentation)
set_define("MOZ_PRESENTATION", presentation)

# PrivateBrowsing Support
# ==============================================================
option("--disable-privatebrowsing", help="Disable Private Browsing (default enable)")


@depends("--enable-privatebrowsing", target)
def privatebrowsing(value, target):
    enabled = bool(value)
    if enabled:
        return True


set_config("MOZ_PRIVATEBROWSING", privatebrowsing)
set_define("MOZ_PRIVATEBROWSING", privatebrowsing)

# GPU Node Support
# ==============================================================
option(
    "--with-sandbox-gpu-node",
    nargs=1,
    help="Enable GPU nodes under the sandbox, value = [adreno, imagination, mali]",
)


@depends_if("--with-sandbox-gpu-node")
def sandboxgpunode(value):
    return "GPU_NODE_%s" % value[0]


option("--with-api-daemon-port", nargs=1, help="api daemon port number", default="80")


@depends("--with-api-daemon-port")
def api_daemon_port(value):
    return value[0]


set_config("API_DAEMON_PORT", api_daemon_port)
set_define("API_DAEMON_PORT", api_daemon_port)

set_define("GPU_NODE_adreno", 1)
set_define("GPU_NODE_imagination", 2)
set_define("GPU_NODE_mali", 3)
set_define("MOZ_SANDBOX_GPU_NODE", sandboxgpunode)

# Enable 3gpp support in mp4parse C bindings.
set_define("MP4PARSE_FEATURE_3GPP", 1)

# SafeBrowsing Support
# ==============================================================
option("--enable-safebrowsing", help="Enable Safe Browsing (default disable)")


@depends("--disable-safebrowsing", target)
def safebrowsing(value, target):
    enabled = bool(value)
    if enabled:
        return True


set_config("MOZ_SAFE_BROWSING", safebrowsing)
set_define("MOZ_SAFE_BROWSING", safebrowsing)

include("common.configure")
