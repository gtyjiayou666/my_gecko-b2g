include: '.gitlab/ci/rules.yml'

variables:
  SCCACHE_REDIS_BASEURL: redis://172.31.29.130

 # note that these setups merely support pipelines triggered by merge requests
.global_setup: &global_setup
  # remove the replacement of remote url in case the container is stale
  - 'git config --global --remove-section url."${LOCAL_GIT_MIRROR}" || true'
  - '[[ -f /entrypoint.sh ]] && /entrypoint.sh'
  - export CI_USE_MIRROR=${CI_USE_MIRROR:-false} # in case not set in config.toml
  - export CPU_CORES=$(cat /proc/cpuinfo | grep processor -c)
  - export PATHSPEC=${PATHSPEC:-.}
  - echo -e "machine ${CI_SERVER_HOST}\nlogin gitlab-ci-token\npassword ${CI_JOB_TOKEN}" > ~/.netrc
  - git config --global url."${CI_SERVER_URL}/".insteadOf "git@${CI_SERVER_HOST}:"
  - |
    msg() {
      echo -e "\033[1;33m${1-}\033[0m"
    }
  - |
    die() {
      local msg=$1
      local code=${2-1}
      echo -e  "\033[0;31m${msg}\033[0m"
      exit "$code"
    }
  - |
    if [[ ${GIT_STRATEGY} == none ]]; then
      msg "Try restoring a bare repo in ${GIT_CLONE_PATH} from ${LOCAL_GIT_MIRROR:-"${CI_SERVER_URL}"}/${CI_MERGE_REQUEST_PROJECT_PATH}.git"
      pushd ${GIT_CLONE_PATH%/*}
      rm -rf ${GIT_CLONE_PATH}
      git clone \
        --no-checkout \
        -o kaios \
        -b ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} \
        --jobs ${CPU_CORES} \
        "${LOCAL_GIT_MIRROR:-"${CI_SERVER_URL}"}/${CI_MERGE_REQUEST_PROJECT_PATH}.git" \
        ${GIT_CLONE_PATH}
      popd
      git remote add origin ${CI_MERGE_REQUEST_SOURCE_PROJECT_URL}.git
      git fetch \
          -j${CPU_CORES} \
          origin \
          ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
    elif $(git rev-parse --is-shallow-repository); then
      msg "Due to GIT_DEPTH (set as ${GIT_DEPTH}), restore the whole git history between \
      origin/${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} and kaios/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"
      git fetch \
          -j${CPU_CORES} \
          --unshallow \
          origin \
          ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
    fi
  - |
    if ${CI_USE_MIRROR}; then
      msg "Alternatively use ${LOCAL_GIT_MIRROR} for following git-clone."
      git config --global url."${LOCAL_GIT_MIRROR}".insteadOf "${CI_SERVER_URL}"
    fi
  - merge_base=$(git merge-base kaios/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} FETCH_HEAD)
  # git can't retrieve pathspec stored in variable for unknown reason
  # as a workaround, eval works
  - |
    mapfile -t changed_files \
      < <(eval "git diff ${merge_base} FETCH_HEAD --diff-filter=ARM --name-only -- ${PATHSPEC}")
  - printf '%s\n' "${changed_files[@]}"

.koost_setup: &koost_setup
  - |
    if [[ ${GIT_CLONE_PATH##*/} == koost ]]; then
      cd ${GIT_CLONE_PATH%/*}
      git init
      git fetch ${CI_SERVER_URL}/KaiOS/gecko-dev.git ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} --no-tags --depth 1 -j${CPU_CORES:-8}
      git reset --hard FETCH_HEAD
    else
      cd ${GIT_CLONE_PATH}
      if [[ ${CI_JOB_NAME%:*} == build ]]; then
        rm -rf koost
        git clone ${CI_SERVER_URL}/KaiOS/koost.git -b ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} --depth 1
        git -C koost log -1
      fi
    fi
  - git clean -dfx

.precautions_base:
  stage: .pre
  image: ${CI_REGISTRY}/kaios/gecko-dev/lint:da2bfc77
  tags:
    - sh-runners
  variables:
    GIT_STRATEGY: none # save the time took by disk I/O since we don't need working tree in this stage
  before_script:
    - *global_setup

.mr_validation:
  extends:
    - .precautions_base
    - .rules:unskippable
  variables:
    COMMIT_MESSAGE_PATTERN: '^(Revert \")?(Bug|MozBug) [[:digit:]]+ \- '
  script:
    - |
      remote_head=$( \
        git ls-remote -h --exit-code \
        ${CI_MERGE_REQUEST_PROJECT_URL}.git \
        ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} | awk '{print $1}'\
      )
    - |
      msg "Check whether or not MR #${CI_MERGE_REQUEST_IID} is rebased..."
      if ! git merge-base --is-ancestor ${remote_head} FETCH_HEAD; then
        git log FETCH_HEAD kaios/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} \
          --not ${merge_base}^ \
          --decorate \
          --oneline \
          --graph \
          --color=always
        die "Please rebase your MR to the latest ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}."
      fi
    - |
      if [[ $(git rev-list kaios/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}..FETCH_HEAD --oneline --merges) ]]; then
        msg "MR #${CI_MERGE_REQUEST_IID} contains merge commit:"
        git rev-list kaios/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}..FETCH_HEAD --merges --format="%h %ct %ce"
        echo "Skip message validation."
        exit 0
      fi
    - |
      msg "Iteratively validate the message format of the commits within MR #${CI_MERGE_REQUEST_IID}..."
      for c in `git rev-list kaios/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}..FETCH_HEAD --reverse`; do
        cmsg="$(git show ${c} -q --format=%s)"
        if ! [[ ${cmsg} =~ ${COMMIT_MESSAGE_PATTERN} ]]; then
          die "Commit message format error: ${cmsg}"
        fi
        echo "commit message of ${c} validated."
      done
      echo "MR #${CI_MERGE_REQUEST_IID} (detached from ${GITLAB_USER_LOGIN}/${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}) is good."

.lint_base:
  stage: lint
  # this image is based on the one used by taskcluster in mozilla ci,
  # in combination with `clang-tidy` from our prebuilt mozbuild.tar.bz (v5).
  #
  # since this is basically built by `mach taskcluster-build-image lint` command,
  # hence probably needs update due to upstream changes.
  # 3d9d58d5 is the commit of gecko in which this image was built.
  # 3d9d58d5_1 add a layer of packages update base on da2bfc77.
  image: ${CI_REGISTRY}/kaios/gecko-dev/lint:da2bfc77
  tags:
    - sh-runners
  variables:
    MACH_LINT_PARAMETERS: '-f unix -v'
  before_script:
    - *global_setup
    - *koost_setup
    - '[[ ${GIT_CLONE_PATH##*/} == koost ]] && changed_files=("${changed_files[@]/#/koost/}")'
    - 'msg "linters to be activated: ${SPECIFIC_LINTERS}"'
  script:
    - export MACH_USE_SYSTEM_PYTHON=${MACH_USE_SYSTEM_PYTHON-1}
    - './mach lint -l ${SPECIFIC_LINTERS// /" -l "} ${MACH_LINT_PARAMETERS} "${changed_files[@]}"'

# it's worth noting that the following jobs don't directly extend ".build:rules" because
# they're extended in other projects, e.g. re/kaios-build
.build_desktop:
  image: ${CI_REGISTRY}/re/kaios-build/next/desktop:1.73.0_12_0
  tags:
    - sh-runners
  variables:
    MOZ_OBJDIR: 'objdir-desktop-gecko'
    MOZCONFIG: 'mozconfig-b2g-desktop'
    SCCACHE_REDIS_DB: 4 # use DB #4 as sccache
    SCCACHE_CACHE_SIZE: 6G
    CARGO_NET_OFFLINE: 'true'
  before_script:
    - *global_setup
    - *koost_setup
  script:
    - export SCCACHE_REDIS=${SCCACHE_REDIS_BASEURL}/${SCCACHE_REDIS_DB}
    - export MACH_USE_SYSTEM_PYTHON=${MACH_USE_SYSTEM_PYTHON-1}
    - sccache -z
    - ./mach build
    - sccache -s
    - mkdir artifacts-desktop-gecko
    - cp -r -L ${MOZ_OBJDIR}/dist artifacts-desktop-gecko/
    - cp ${MOZ_OBJDIR}/config.status artifacts-desktop-gecko/
    - cp ${MOZ_OBJDIR}/mozinfo.json artifacts-desktop-gecko/
    - find artifacts-desktop-gecko/dist/ -type f | xargs strip > /dev/null 2>&1 || echo ignore-strip-fails
    - tar zcf artifacts-desktop-gecko.tgz artifacts-desktop-gecko
  artifacts:
    expire_in: 1 days
    paths:
      - artifacts-desktop-gecko.tgz


.test_wpt:
  image: ${CI_REGISTRY}/re/kaios-build/next/desktop:1.73.0_12_0
  tags:
    - sh-runners
  variables:
    MOZ_OBJDIR: 'artifacts-desktop-gecko'
    MOZCONFIG: 'mozconfig-b2g-desktop'
  before_script:
    - *global_setup
  only:
    - merge_requests
  script:
    - tar zxf artifacts-desktop-gecko.tgz
    - ./mach wpt testing/web-platform/tests/webdriver/tests/classic/get_element_text/get.py --headless

.build_emulator:
  image: ${CI_REGISTRY}/re/kaios-build/next/daily:1.73.0_12_0
  tags:
    - sh-runners
  variables:
    ANDROID_NDK: '~/.mozbuild/android-ndk-r21d'
    GONK_PRODUCT_NAME: generic_x86_64
    PLATFORM_VERSION: 29
    TARGET_ARCH: x86_64
    TARGET_ARCH_VARIANT: x86_64
    TARGET_CPU_VARIANT: generic
    BINSUFFIX: 64
    B2G_DEBUG: 1
    SCCACHE_REDIS_DB: 2 # use DB #2 as sccache
    SCCACHE_CACHE_SIZE: 2G
    CARGO_NET_OFFLINE: 'true'
  before_script:
    - *global_setup
  script:
    - git clone --depth 1 git@git.kaiostech.com:KaiOS/dummy/emulator-10.git > /dev/null 2>&1
    - export SCCACHE_REDIS=${SCCACHE_REDIS_BASEURL}/${SCCACHE_REDIS_DB}
    - sccache -z
    - export GONK_PATH=${PWD}/emulator-10
    - export GECKO_OBJDIR=${PWD}/objdir-emulator-gecko
    - ./build-b2g.sh
    - sccache -s

.build_arm:
  image: ${CI_REGISTRY}/re/kaios-build/next/daily:1.73.0_12_0
  tags:
    - sh-runners
  variables:
    GONK_PRODUCT_NAME: msm8937_32go
    PLATFORM_VERSION: 29
    TARGET_ARCH: arm
    TARGET_ARCH_VARIANT: armv8-a
    TARGET_CPU_VARIANT: cortex-a53
    ANDROID_NDK: '~/.mozbuild/android-ndk-r21d'
    PRODUCT_MANUFACTURER: QUALCOMM
    SCCACHE_REDIS_DB: 3 # use DB #3 as sccache
    SCCACHE_CACHE_SIZE: 2G
    CARGO_NET_OFFLINE: 'true'
    B2G_STANDALONE_BUILD: 1
  before_script:
    - *global_setup
    - *koost_setup
  script:
    - rm -rf b2g-sysroot && git clone -b gonk_LF.UM.8.6.2 ${CI_SERVER_URL}/KaiOS/dummy/b2g-sysroot.git
    - git -C b2g-sysroot log -1
    - export SCCACHE_REDIS=${SCCACHE_REDIS_BASEURL}/${SCCACHE_REDIS_DB}
    - sccache -z
    - export B2G_SYSROOT=${PWD}/b2g-sysroot
    - export GECKO_OBJDIR=${PWD}/objdir-arm-gecko
    - ./build-b2g.sh
    - sccache -s

.build_arm64:
  image: ${CI_REGISTRY}/re/kaios-build/next/daily:1.73.0_12_0
  tags:
    - sh-runners
  variables:
    PLATFORM_VERSION: 33
    TARGET_ARCH: arm64
    TARGET_ARCH_VARIANT: armv8-a
    TARGET_CPU_VARIANT: cortex-a53
    ANDROID_NDK: '~/.mozbuild/android-ndk-r25b'
    PRODUCT_MANUFACTURER: KAIOS
    SCCACHE_REDIS_DB: 3 # use DB #3 as sccache
    SCCACHE_CACHE_SIZE: 2G
    CARGO_NET_OFFLINE: 'true'
    B2G_STANDALONE_BUILD: 1
  before_script:
    - *global_setup
    - *koost_setup
  script:
    - rustup target add aarch64-linux-android
    - rm -rf b2g-sysroot
    - git clone --depth 1 -b gonk_android-13.0.0_r50 ${CI_SERVER_URL}/KaiOS/dummy/b2g-sysroot.git
    - git -C b2g-sysroot log -1
    - export SCCACHE_REDIS=${SCCACHE_REDIS_BASEURL}/${SCCACHE_REDIS_DB}
    - sccache -z
    - export B2G_SYSROOT=${PWD}/b2g-sysroot
    - export GECKO_OBJDIR=${PWD}/objdir-arm64-gecko
    - ./build-b2g.sh
    - sccache -s
